; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

[application]

config/name="Notebook Tower Defense"
run/main_scene="uid://dj8dl22g5mvxh"
config/features=PackedStringArray("4.4", "GL Compatibility")
config/icon="res://icon.svg"

[autoload]

GameState="*res://components/game_state.gd"
AudioPlayer="*res://components/audio_player.tscn"
Respawner="*res://components/respawner.gd"

[display]

window/size/viewport_width=1280
window/size/viewport_height=720
window/stretch/mode="canvas_items"

[global_group]

money_meter=""
lives_meter=""
wave_meter=""
selected_tower_meter=""
tower_placement_shadow=""
tower_select_panel=""
tower_buy_panel=""
next_wave_meter=""
mob_members=""
tower_upgrade_panel=""
tower_info_and_buy_panel=""
audio=""
towers=""
projectiles=""
mobs=""

[input]

ui_accept={
"deadzone": 0.5,
"events": []
}
ui_select={
"deadzone": 0.5,
"events": []
}
ui_cancel={
"deadzone": 0.5,
"events": []
}
ui_focus_next={
"deadzone": 0.5,
"events": []
}
ui_focus_prev={
"deadzone": 0.5,
"events": []
}
ui_left={
"deadzone": 0.5,
"events": []
}
ui_right={
"deadzone": 0.5,
"events": []
}
ui_up={
"deadzone": 0.5,
"events": []
}
ui_down={
"deadzone": 0.5,
"events": []
}
ui_page_up={
"deadzone": 0.5,
"events": []
}
ui_page_down={
"deadzone": 0.5,
"events": []
}
ui_home={
"deadzone": 0.5,
"events": []
}
ui_end={
"deadzone": 0.5,
"events": []
}
ui_cut={
"deadzone": 0.5,
"events": []
}
ui_copy={
"deadzone": 0.5,
"events": []
}
ui_paste={
"deadzone": 0.5,
"events": []
}
ui_undo={
"deadzone": 0.5,
"events": []
}
ui_redo={
"deadzone": 0.5,
"events": []
}
ui_text_completion_query={
"deadzone": 0.5,
"events": []
}
ui_text_completion_accept={
"deadzone": 0.5,
"events": []
}
ui_text_completion_replace={
"deadzone": 0.5,
"events": []
}
ui_text_newline={
"deadzone": 0.5,
"events": []
}
ui_text_newline_blank={
"deadzone": 0.5,
"events": []
}
ui_text_newline_above={
"deadzone": 0.5,
"events": []
}
ui_text_indent={
"deadzone": 0.5,
"events": []
}
ui_text_dedent={
"deadzone": 0.5,
"events": []
}
ui_text_backspace={
"deadzone": 0.5,
"events": []
}
ui_text_backspace_word={
"deadzone": 0.5,
"events": []
}
ui_text_backspace_word.macos={
"deadzone": 0.5,
"events": []
}
ui_text_backspace_all_to_left.macos={
"deadzone": 0.5,
"events": []
}
ui_text_delete={
"deadzone": 0.5,
"events": []
}
ui_text_delete_word={
"deadzone": 0.5,
"events": []
}
ui_text_delete_word.macos={
"deadzone": 0.5,
"events": []
}
ui_text_delete_all_to_right.macos={
"deadzone": 0.5,
"events": []
}
ui_text_caret_left={
"deadzone": 0.5,
"events": []
}
ui_text_caret_word_left={
"deadzone": 0.5,
"events": []
}
ui_text_caret_line_start.macos={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":true,"meta_pressed":false,"pressed":false,"keycode":65,"physical_keycode":0,"key_label":0,"unicode":65,"location":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"command_or_control_autoremap":true,"alt_pressed":false,"shift_pressed":false,"pressed":false,"keycode":4194319,"physical_keycode":0,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
ui_text_caret_line_end.macos={
"deadzone": 0.5,
"events": []
}
ui_text_caret_page_up={
"deadzone": 0.5,
"events": []
}
ui_text_caret_page_down={
"deadzone": 0.5,
"events": []
}
ui_text_caret_document_start={
"deadzone": 0.5,
"events": []
}
ui_text_caret_document_start.macos={
"deadzone": 0.5,
"events": []
}
ui_text_caret_document_end={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"command_or_control_autoremap":true,"alt_pressed":false,"shift_pressed":false,"pressed":false,"keycode":4194322,"physical_keycode":0,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
ui_pause_resume={
"deadzone": 0.2,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194305,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
hotkey_select_tower_1={
"deadzone": 0.2,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":81,"key_label":0,"unicode":113,"location":0,"echo":false,"script":null)
]
}
hotkey_select_tower_2={
"deadzone": 0.2,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":87,"key_label":0,"unicode":119,"location":0,"echo":false,"script":null)
]
}
hotkey_select_tower_3={
"deadzone": 0.2,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":69,"key_label":0,"unicode":101,"location":0,"echo":false,"script":null)
]
}
hotkey_select_tower_4={
"deadzone": 0.2,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":82,"key_label":0,"unicode":114,"location":0,"echo":false,"script":null)
]
}

[layer_names]

2d_physics/layer_1="towers"
2d_physics/layer_2="walls"
2d_physics/layer_3="mobs"
2d_physics/layer_4="projectiles"
2d_physics/layer_5="player_hitbox"
2d_physics/layer_6="level_spawn"

[rendering]

renderer/rendering_method="gl_compatibility"
renderer/rendering_method.mobile="gl_compatibility"
textures/vram_compression/import_etc2_astc=true
environment/defaults/default_clear_color=Color(1, 1, 1, 1)
